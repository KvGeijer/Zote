to_digit := dict([["=", -2],["-", -1],["0", 0],["1", 1],["2", 2]]);
from_digit := to_digit >> map(rev) >> dict;

// Had problem here where I got overflow without noticing. It would be good to have an error for that
from_snafu := \>> map(\char -> to_digit[char])
	>> rev
	>> enumerate
	>> map(\(i, v) -> v*5^i)
	>> sum;

fn to_snafu(dec) -> {
	snafu := [];
	while dec != 0 {
		diff := ((dec + 2) % 5) - 2;
		from_digit[diff] >> push(snafu);
		dec = (dec - diff) / 5;
	}
	snafu >> rev >> join
}

read("aoc-2022/inputs/25.txt")
	>> split("\n")
	>> map(from_snafu)
	>> sum
	>> to_snafu
	>> print;

