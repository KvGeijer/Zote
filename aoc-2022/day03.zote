fn simple_overlap(left, right) -> {
	set(left)
		>> intersect(set(right))
		>> keys
		>> head
};

fn priority(char) -> {
	ascii := to_ascii(char);
	if ascii >= to_ascii("a") {
		ascii - to_ascii("a") + 1
	} else {
		ascii - to_ascii("A") + 27
	}
};

lines := read("aoc-2022/inputs/03.txt")
	>> split("\n") 
	>> map(list);

// Part 1
lines
	>> map(\sack -> {
		middle := len(sack)/2;
		simple_overlap(sack[:middle], sack[middle:])
	})
	>> map(priority)
	>> sum
	>> print;

// Part 2
fn group_overlap((e1, e2, e3)) -> {
	set(e1) 
		>> intersect(set(e2))
		>> intersect(set(e3)) 
		>> keys 
		>> head
};

[0:len(lines)/3] 
	>> map(\group -> 
		group_overlap(lines[group*3:(group+1)*3]) >> priority
	) 
	>> sum 
	>> print;
