var (state_lines, move_lines) = read("aoc-2022/inputs/05.txt")
	>> split("\n")
	>> split("");

fn simple_movement(stacks) -> {
	for instr in move_lines {
		var (nbr, from, to) = (instr >> split(" "))[1::2] >> map(int);

		for _ in [0:nbr] stacks[from - 1] >> pop >> push(stacks[to - 1]);
	};
};

fn cool_movement(stacks) -> {
	for instr in move_lines[:] {
		var (nbr, from, to) = (instr >> split(" "))[1::2] >> map(int);

		stacks[to-1] = stacks[to-1] ++ stacks[from-1][-nbr:];
		stacks[from-1] = stacks[from-1][:-nbr];
	};
};

for movement in [simple_movement, cool_movement] {
	var stacks = [];
	for i in [0:(len(state_lines[0]) + 1)/4] push([], stacks);

	for row in rev(state_lines[:-1]) {
		var stack_ind = 0; // TODO: Add zip!
			for item in row[1::4] {
				if (item != " ") push(item, stacks[stack_ind]);
				stack_ind = stack_ind + 1;
			};
	};

	movement(stacks);

	var string = "";
	for char in map(stacks, pop) {
		string = string ++ char;
	};
	print(string); // TODO join function
}

