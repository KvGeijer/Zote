fn cached_fib(n) -> {
	if n < 0 
		return [];
	
	// Grammar is not great, as the following
	// if n == 0
	// 	   [1]
	//
	// Would be parsed as
	// if (n == 0[1])
	//
	// As it will always try to parse as large of an expression as possible.
	// Thus we need the {} to remove this uncertainty. Should we alter the grammar?
 	if n == 0 {
		[1]
	}
	else if n == 1 {
		[1, 1]
	} 
	else {
		var cache = [1, 1];
		var x = 2;
		var i = -1;
		while (i = i + 1) < n	
			 cache = cache ++ [cache[-1] + cache[-2]];

		cache
	}
};

// Added some extra array slicing and manipulation for tests
var fibs = cached_fib(20);
fibs[-4:-1] = [0,0,0];
fibs ++ fibs[1:7:3] >> print;
